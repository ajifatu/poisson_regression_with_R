event_counts <- table(medData$events)
barplot(event_counts,
main = "Fréquence des nombres de crises d'épilepsie",
xlab = "Nombre de crises d'épilepsie",
ylab = "Effectifs",
col = "orange")
# Boxplot pour 'events'
boxplot(medData$events,
main = "Boxplot des crises d'épilepsie",
ylab = "Nombre de crises d'épilepsie",
col = "lightgreen")
cat("Moyenne :", mean_events, "\n")
cat("Écart-type :", sd_events, "\n")
cat("Variance :", var_events, "\n")
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
# Diagramme de fréquence pour 'events'
event_counts <- table(medData$events)
barplot(event_counts,
main = "Fréquence des nombres de crises d'épilepsie",
xlab = "Nombre de crises d'épilepsie",
ylab = "Effectifs",
col = "orange")
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events > 15, 15, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
# Statistiques descriptives pour 'events'
summary(medData$events)
medData$events <- ifelse(medData$events > 10, 10, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events > 7, 7, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events > 15, 5, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData <- read.spss("med.poissonregression.equaltimes.sav",to.data.frame=TRUE)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events == 5, 6, medData$events)
medData$events <- ifelse(medData$events == 5, 6, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events == 5, 7, medData$events)
medData$events <- ifelse(medData$events == 6, 6, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
medData$events <- ifelse(medData$events = 5, 7, medData$events)
medData$events <- ifelse(medData$events == 5, 7, medData$events)
medData$events <- ifelse(medData$events == 6, 7, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events == 5, 7, medData$events)
medData$events <- ifelse(medData$events == 6, 8, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
medData$events <- ifelse(medData$events == 5, 7, medData$events)
medData$events <- ifelse(medData$events == 6, 8, medData$events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(medData$events)
poisson_fit <- dpois(0:max(medData$events), lambda = lambda_est)
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
# Superposition de la distribution théorique sur l'histogramme
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
# Statistiques descriptives pour 'events'
summary(medData$events)
medData <- read.spss("med.poissonregression.equaltimes.sav",to.data.frame=TRUE)
events_values <- data$events
events_values <- data$events
events_values <- medData$events
print(events_values)
# Définir la moyenne proche des données initiales
lambda <- mean(c(6, 5, 4, 4, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1,
9, 8, 7, 9, 9, 7, 8, 9, 7, 6, 8, 7, 7, 6, 7, 7, 7, 6, 5, 5,
5, 5, 4, 5, 4, 4, 3, 3, 3, 2, 16, 11, 14, 12, 11, 10, 9, 9,
10, 9, 11, 12, 10, 8, 9, 9, 8, 8, 7, 7, 7, 8, 6, 7, 6))
# Générer de nouvelles valeurs ajustées selon la loi de Poisson
adjusted_events <- rpois(length(c(6, 5, 4, 4, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2,
2, 2, 1, 1, 1, 9, 8, 7, 9, 9, 7, 8, 9, 7, 6,
8, 7, 7, 6, 7, 7, 7, 6, 5, 5, 5, 5, 4, 5, 4,
4, 3, 3, 3, 2, 16, 11, 14, 12, 11, 10, 9, 9,
10, 9, 11, 12, 10, 8, 9, 9, 8, 8, 7, 7, 7,
8, 6, 7, 6)), lambda = lambda)
# Afficher les données ajustées
print(adjusted_events)
mean_events <- mean(adjusted_events)
sd_events <- sd(adjusted_events)
var_events <- var(adjusted_events)
cat("Moyenne :", mean_events, "\n")
cat("Écart-type :", sd_events, "\n")
cat("Variance :", var_events, "\n")
# Ajustement à une distribution de Poisson
lambda_est <- mean(adjusted_events)
poisson_fit <- dpois(0:max(adjusted_events), lambda = lambda_est)
hist(medData$events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(medData$events), poisson_fit, type = "b", col = "red")
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "red")
cat("Moyenne :", mean_events, "\n")
cat("Écart-type :", sd_events, "\n")
cat("Variance :", var_events, "\n")
# Définir la moyenne proche des données initiales
lambda <- mean(c(6, 5, 4, 4, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1,
9, 8, 7, 9, 9, 7, 8, 9, 7, 6, 8, 7, 7, 6, 7, 7, 7, 6, 5, 5,
5, 5, 4, 5, 4, 4, 3, 3, 3, 2, 16, 11, 14, 12, 11, 10, 9, 9,
10, 9, 11, 12, 10, 8, 9, 9, 8, 8, 7, 7, 7, 8, 6, 7, 6))
# Générer de nouvelles valeurs ajustées selon la loi de Poisson
adjusted_events <- rpois(length(c(6, 5, 4, 4, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2,
2, 2, 1, 1, 1, 9, 8, 7, 9, 9, 7, 8, 9, 7, 6,
8, 7, 7, 6, 7, 7, 7, 6, 5, 5, 5, 5, 4, 5, 4,
4, 3, 3, 3, 2, 16, 11, 14, 12, 11, 10, 9, 9,
10, 9, 11, 12, 10, 8, 9, 9, 8, 8, 7, 7, 7,
8, 6, 7, 6)), lambda = lambda)
# Afficher les données ajustées
print(adjusted_events)
# Ajustement à une distribution de Poisson
lambda_est <- mean(adjusted_events)
poisson_fit <- dpois(0:max(adjusted_events), lambda = lambda_est)
# Superposition de la distribution théorique sur l'histogramme
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "red")
medData$events <- adjusted_events
# Afficher les résultats
cat("Moyenne :", mean_events, "\n")
cat("Écart-type :", sd_events, "\n")
cat("Variance :", var_events, "\n")
# Afficher les effectifs et les pourcentages
print(treatment_counts)
#Data prep
#recodage treatment - high
T1 <- rep(0,nrow(D))
T1[medData$treatment==1] <- 1
print(sum(T1))
#recodage treatment - low
T2 <- rep(0,nrow(D))
T2[medData$treatment==2] <- 1
print(sum(T2))
print(sum(T1))
print(sum(T2))
poisson_model <- glm(events ~ treatment + alcohol + esteem,
family = poisson(link = "log"),
data = medData)
summary()
summary(poisson_model)
# Ajustement du modèle de régression de Poisson
poisson_model <- glm(events ~  alcohol + esteem,
family = poisson(link = "log"),
data = medData)
# Résumé du modèle
summary(poisson_model)
poisson_model <- glm(events ~  esteem,
family = poisson(link = "log"),
data = medData)
# Résumé du modèle
summary(poisson_model)
# Ajustement du modèle de régression de Poisson
poisson_model <- glm(events ~ treatment + alcohol + esteem,
family = poisson(link = "log"),
data = medData)
# Résumé du modèle
summary(poisson_model)
dispersiontest(poisson_model)
library(AER)
dispersiontest(poisson_model)
ggplot(medData, aes(x = esteem, y = events, color = factor(treatment))) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "poisson")) +
labs(title = "Events vs Esteem by Treatment Group",
x = "Esteem",
y = "Number of Events",
color = "Treatment") +
theme_minimal()
ggplot(medData, aes(x = alcohol, y = events, color = factor(treatment))) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "poisson")) +
labs(title = "Events vs Alcohol by Treatment Group",
x = "Alcohol",
y = "Number of Events",
color = "Treatment") +
theme_minimal()
#Moyenne crise selon traitement prescrit
mean_events <- tapply(X=medData$events,INDEX = medData$treatment,FUN = mean)
print(mean_events)
#Effectif traitements prescrits
table(medData$treatment)
hist(medData$treatment)
newGLM <- glm(events ~ esteem + treatment, family = "poisson", data = medData)
summary(newGLM)
str(medData)
summary(medData)
# Vérifier s'il y a des lignes dupliquées
print("Lignes dupliquées: ", sum(duplicated(medData)))
# Nombre total de valeurs manquantes
print("Valeurs manquantes: ",sum(is.na(medData)))
# Vérifier s'il y a des lignes dupliquées
print("Lignes dupliquées: ", sum(duplicated(medData)))
# Nombre total de valeurs manquantes
print("Valeurs manquantes: ",sum(is.na(medData)))
hist(medData$events)
hist(medData$esteem)
pie(alcohol_counts,
labels = paste0(names(alcohol_counts), " (", round(alcohol_percent, 1), "%)"),
main = "Répartition des patients selon la consommation d'alcool",
col = c("skyblue", "orange"))
barplot(treatment_counts,
names.arg = c("Haute dose", "Faible dose", "Placebo"),
col = c("skyblue", "orange", "lightgreen"),
main = "Répartition des patients selon le traitement",
ylab = "Effectifs",
ylim = c(0, max(treatment_counts) + 5))
# Statistiques descriptives pour 'events'
summary(medData$events)
events_values <- medData$events
print(events_values)
event_counts <- table(medData$events)
barplot(event_counts,
main = "Fréquence des nombres de crises d'épilepsie",
xlab = "Nombre de crises d'épilepsie",
ylab = "Effectifs",
col = "orange")
# Superposition de la distribution théorique sur l'histogramme
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightblue")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "red")
# Superposition de la distribution théorique sur l'histogramme
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "pink")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "red")
# Superposition de la distribution théorique sur l'histogramme
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "blue")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "red")
# Superposition de la distribution théorique sur l'histogramme
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightgreen")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "orange")
red"""
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightgreen")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "orange")
hist(adjusted_events, probability = TRUE,
main = "Comparaison avec la loi de Poisson",
xlab = "Nombre de crises d'épilepsie",
col = "lightgreen")
lines(0:max(adjusted_events), poisson_fit, type = "b", col = "red")
cat("Moyenne des événements:", mean_events, "\nVariance des événements:", var_events)
cat("Moyenne des événements:", mean_events, "\nVariance des événements:", var_events)
print(sum(T1))
print(sum(T2))
poisson_model <- glm(events ~ T1 + T2 + alcohol + esteem,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
medData <- read.spss("med.poissonregression.equaltimes.sav",to.data.frame=TRUE)
T1 <- rep(0,nrow(D))
T1[medData$treatment==1] <- 1
print(sum(T1))
#Recodage treatment - low
T2 <- rep(0,nrow(D))
T2[medData$treatment==2] <- 1
print(sum(T2))
poisson_model <- glm(events ~ T1 + T2 + alcohol + esteem,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
ggplot(medData, aes(x = as.factor(treatment), y = events)) +
geom_boxplot() +
labs(title = "Distribution des événements par traitement",
x = "Traitement",
y = "Nombre d'événements")
library(AER)
dispersiontest(poisson_model)
library(ggplot2)
ggplot(medData, aes(x = factor(treatment), y = events)) +
geom_boxplot() +
labs(x = "Treatment Group", y = "Number of Epilepsy Events", title = "Distribution of Events by Treatment")
modelWithoutEsteem <- glm(events ~ treatment, family = "poisson", data = medData)
a1 <- anova(modelWithoutEsteem, newGLM, test="Chisq")
a1
poisson_model <- glm(events ~ T1 + T2 + alcohol + esteem,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
# Ajustement du modèle de régression de Poisson: sans alcohol
poisson_model <- glm(events ~ T1 + T2 + esteem,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
# Ajustement du modèle de régression de Poisson: sans alcohol
poisson_model <- glm(events ~ T1 + T2,
family = poisson(link = "log"),
data = medData)
poisson_model <- glm(events ~ T1 + T2,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
poisson_model <- glm(events ~ T1 + T2 + esteem,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
poisson_model <- glm(events ~ T1 + T2 + alcohol + esteem,
family = poisson(link = "log"),
data = medData)
summary(poisson_model)
new_poisson_model <- glm(events ~ T1 + T2 + esteem,
family = poisson(link = "log"),
data = medData)
summary(new_poisson_model)
models_comparison <- data.frame(
Model = c("Avec Alcohol", "Sans Alcohol"),
AIC = c(AIC(poisson_model), AIC(new_poisson_model)),
Deviance = c(deviance(poisson_model), deviance(new_poisson_model)),
df = c(df.residual(poisson_model), df.residual(new_poisson_model))
)
print(models_comparison)
anova(new_poisson_model, poisson_model, test="Chisq")
library(ggplot2)
# Extraire les coefficients et leurs erreurs standards
coef_old <- data.frame(
coef = coef(poisson_model),
se = sqrt(diag(vcov(poisson_model))),
variable = names(coef(poisson_model)),
model = "Avec Alcohol"
)
coef_new <- data.frame(
coef = coef(new_poisson_model),
se = sqrt(diag(vcov(new_poisson_model))),
variable = names(coef(new_poisson_model)),
model = "Sans Alcohol"
)
coef_comparison <- rbind(coef_old, coef_new)
# Créer le graphique
ggplot(coef_comparison, aes(x = variable, y = coef, color = model)) +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se),
position = position_dodge(width = 0.5), width = 0.2) +
coord_flip() +
theme_minimal() +
labs(title = "Comparaison des coefficients entre les modèles",
y = "Estimation des coefficients",
x = "Variables")
# Calculer les prédictions pour les deux modèles
predictions_old <- predict(poisson_model, type = "response")
predictions_new <- predict(new_poisson_model, type = "response")
# Créer un graphique de comparaison
plot_data <- data.frame(
Observed = medData$events,
Old_Model = predictions_old,
New_Model = predictions_new
)
par(mfrow=c(1,2))
plot(plot_data$Observed, plot_data$Old_Model,
main="Modèle avec Alcohol",
xlab="Observé", ylab="Prédit")
abline(0,1, col="red")
plot(plot_data$Observed, plot_data$New_Model,
main="Modèle sans Alcohol",
xlab="Observé", ylab="Prédit")
abline(0,1, col="red")
# Diagnostic plots de base
par(mfrow=c(2,2))
plot(new_poisson_model)
# Résidus de déviance standardisés
residus <- rstandard(new_poisson_model, type="deviance")
plot(predict(new_poisson_model), residus,
xlab="Valeurs prédites",
ylab="Résidus standardisés",
main="Résidus vs Valeurs prédites")
abline(h=0, col="red")
par(mfrow=c(2,2))
plot(new_poisson_model)
# Résidus de déviance standardisés
residus <- rstandard(new_poisson_model, type="deviance")
plot(predict(new_poisson_model), residus,
xlab="Valeurs prédites",
ylab="Résidus standardisés",
main="Résidus vs Valeurs prédites")
abline(h=0, col="red")
# Calculer R² de McFadden
null_model <- glm(events ~ 1, family=poisson, data=medData)
R2_McFadden <- 1 - logLik(new_poisson_model)/logLik(null_model)
# RMSE (Root Mean Square Error)
rmse <- sqrt(mean((medData$events - predict(new_poisson_model, type="response"))^2))
# MAE (Mean Absolute Error)
mae <- mean(abs(medData$events - predict(new_poisson_model, type="response")))
print("R²: ",R2_McFadden )
#  R²
null_model <- glm(events ~ 1, family=poisson, data=medData)
R2_McFadden <- 1 - logLik(new_poisson_model)/logLik(null_model)
# RMSE (Root Mean Square Error)
rmse <- sqrt(mean((medData$events - predict(new_poisson_model, type="response"))^2))
# MAE (Mean Absolute Error)
mae <- mean(abs(medData$events - predict(new_poisson_model, type="response")))
print("R²: ",R2_McFadden )
print("R²: ",R2_McFadden )
print("Root Mean Square Erro: ",rmse )
print("Mean Absolute Error: ",mae )
R2_McFadden
rmse
mae
# RMSE (Root Mean Square Error)
rmse <- sqrt(mean((medData$events - predict(new_poisson_model, type="response"))^2))
# RMSE (Root Mean Square Error)
rmse <- sqrt(mean((medData$events - predict(new_poisson_model, type="response"))^2))
rmse <- sqrt(mean((medData$events - predict(new_poisson_model, type="response"))^2))
rmse
